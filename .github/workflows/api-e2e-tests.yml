name: API-Only E2E Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'manager-web/src/__tests__/api-e2e/**'
      - 'manager-web/vitest.api-e2e.config.ts'
      - 'manager/**'
      - '.github/workflows/api-e2e-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'manager-web/src/__tests__/api-e2e/**'
      - 'manager-web/vitest.api-e2e.config.ts'
      - 'manager/**'
      - '.github/workflows/api-e2e-tests.yml'

jobs:
  api-e2e-tests:
    name: API E2E Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: manager-web/package-lock.json

    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Cache Node.js dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.npm
          manager-web/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Build nocodo-manager
      run: cargo build --release --bin nocodo-manager

    - name: Install manager-web dependencies
      run: |
        cd manager-web
        npm ci

    - name: Run API E2E Tests
      run: |
        cd manager-web
        npm run test:api-e2e
      env:
        NODE_ENV: test
        TEST_DATABASE_PATH: /tmp/nocodo-test.db

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: api-e2e-test-results
        path: |
          manager-web/test-results/
        retention-days: 30

    - name: Generate test report
      if: always()
      run: |
        cd manager-web
        # Generate basic test summary for step summary
        echo "## API E2E Test Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "API E2E tests completed. Check the workflow logs for detailed results." >> $GITHUB_STEP_SUMMARY

  # TODO: Add performance baseline and API compatibility checks in future iterations