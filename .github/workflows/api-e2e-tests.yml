name: API-Only E2E Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'manager-web/src/__tests__/api-e2e/**'
      - 'manager-web/vitest.api-e2e.config.ts'
      - 'manager/**'
      - '.github/workflows/api-e2e-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'manager-web/src/__tests__/api-e2e/**'
      - 'manager-web/vitest.api-e2e.config.ts'
      - 'manager/**'
      - '.github/workflows/api-e2e-tests.yml'

jobs:
  api-e2e-tests:
    name: API E2E Tests
    runs-on: ubuntu-latest

    services:
      # Setup test database if needed
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nocodo_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: manager-web/package-lock.json

    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Cache Node.js dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
          manager-web/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Build nocodo-manager
      run: cargo build --release --bin nocodo-manager

    - name: Install manager-web dependencies
      run: |
        cd manager-web
        npm ci

    - name: Build manager-web (for embedded assets)
      run: |
        cd manager-web
        npm run build

    - name: Run API E2E Tests
      run: |
        cd manager-web
        npm run test:api-e2e
      env:
        NODE_ENV: test
        TEST_DATABASE_PATH: /tmp/nocodo-test.db

    - name: Run API E2E Tests with Coverage
      run: |
        cd manager-web
        npm run test:api-e2e:coverage
      env:
        NODE_ENV: test
        TEST_DATABASE_PATH: /tmp/nocodo-test-coverage.db

    - name: Upload test results and coverage
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: api-e2e-test-results
        path: |
          manager-web/test-results/
          manager-web/coverage/
          manager-web/playwright-report/
        retention-days: 30

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: success()
      with:
        file: ./manager-web/coverage/api-e2e/lcov.info
        flags: api-e2e
        name: API E2E Coverage
        fail_ci_if_error: false

    - name: Generate test report
      if: always()
      run: |
        cd manager-web
        npm run test:api-e2e 2>&1 | tee test-output.log || true
        # Extract test summary from output
        echo "## API E2E Test Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        tail -20 test-output.log >> $GITHUB_STEP_SUMMARY || echo "No test output available" >> $GITHUB_STEP_SUMMARY

  performance-baseline:
    name: Performance Baseline Check
    runs-on: ubuntu-latest
    needs: api-e2e-tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: manager-web/package-lock.json

    - name: Install dependencies
      run: |
        cd manager-web
        npm ci

    - name: Run performance tests
      run: |
        cd manager-web
        # Run a subset of performance tests to establish baseline
        npx vitest run --config vitest.api-e2e.config.ts src/__tests__/api-e2e/integration/performance-testing.test.ts --reporter=verbose
      env:
        NODE_ENV: test

    - name: Check performance regression
      run: |
        # This would compare against stored performance baselines
        # For now, just ensure tests pass
        echo "Performance baseline check completed"

  api-compatibility:
    name: API Compatibility Check
    runs-on: ubuntu-latest
    needs: api-e2e-tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Build and test API compatibility
      run: |
        # Build manager
        cargo build --release --bin nocodo-manager

        # Quick API startup test
        timeout 30s ./target/release/nocodo-manager --config manager/test-config.toml &
        MANAGER_PID=$!

        # Wait for startup
        sleep 5

        # Test basic API endpoints
        curl -f http://localhost:8081/health || exit 1

        # Cleanup
        kill $MANAGER_PID 2>/dev/null || true

        echo "API compatibility check passed"